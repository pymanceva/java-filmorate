DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS film_likes CASCADE;
DROP TABLE IF EXISTS mpa_ratings CASCADE;
DROP TABLE IF EXISTS genres CASCADE;

CREATE TABLE IF NOT EXISTS mpa_ratings (
	id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar
);

CREATE TABLE IF NOT EXISTS genres (
	id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS users (
	id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	login varchar NOT NULL,
	email varchar NOT NULL,
	birthday date,
	name varchar 
);

CREATE TABLE IF NOT EXISTS films (
	id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar,
	description varchar(200),
	release_date date,
	duration int CHECK (duration > 0),
	mpa_rating_id bigint REFERENCES mpa_ratings (id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS film_likes (
	film_id bigint REFERENCES films (id) ON DELETE CASCADE,
	user_id bigint REFERENCES users (id) ON DELETE CASCADE,
	CONSTRAINT film_likes_PK PRIMARY KEY (film_id, user_id)
);


CREATE TABLE IF NOT EXISTS film_genres (
	film_id bigint REFERENCES films (id) ON DELETE CASCADE,
	genre_id bigint REFERENCES genres (id) ON DELETE RESTRICT,
	CONSTRAINT film_genres_PK PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS friendship (
	user_id bigint REFERENCES users (id) ON DELETE CASCADE,
	friend_id bigint REFERENCES users (id) ON DELETE CASCADE,
	CONSTRAINT friendship_PK PRIMARY KEY (user_id, friend_id)
);